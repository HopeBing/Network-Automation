

Network Deployment Program:

The purpose of this program is to deploy access and core layer while keeping design best practices in mind. The goals was to be able to the configuration with
minimal user configuration. How does this program do this? 

Assumption:

The user knows the topology and in what interfaces connect device to device

Static Configurations in this program:

HSRP Priority (110, 210)
HSRP Version (2)
Port-channel mode (LACP)
Rootguard (Core Switches)
LoopGuard (All Switches)
UplinkFast (All Switches)
Bridge Priorities for AccessSwitches
Secondary CoreSwitch and AccessSwitch configurations. No need to create configurations for each device.

############################3

Program Flow:

   The program will start with a topology build. Here you will configure port-channels and associate physical interfaces to the port-channels. 
	
   The flow for interface creation is as follows:
  
	Root ports are applied to interfaces between core switches if "core" is found in the interface description

	Core Switch IP
		Port-Channel
			Description
			Physical Interface
			Physical Interface
			CTRL + C
		Port-Channel
			Description
			Physical Interface
			Physical Interface
			CTRL + C
		Keep repeating for desired amount of port-channels or:
		Port-channel
		CTRL + C
	Core Switch IP
			Port-Channel
			Description
			Physical Interface
			Physical Interface
			CTRL + C
		Port-Channel
			Description
			Physical Interface
			Physical Interface
			CTRL + C
		Keep repeating for desired amount of port-channels or:
		Port-channel
		CTRL + C
	Keep repeating for desired amount of Core Switches or:
	Core Switch IP
	CTRL + C
	
	Access Switch IP
		Port-Channel
			Description
			Physical Interface
			Physical Interface
			CTRL + C
		Port-Channel
			Description
			Physical Interface
			Physical Interface
			CTRL + C
		Keep repeating for desired amount of port-channels or:
		Port-channel
		CTRL + C
	Access Switch IP
		Port-Channel
			Description
			Physical Interface
			Physical Interface
			CTRL + C
		Port-Channel
			Description
			Physical Interface
			Physical Interface
			CTRL + C
		Keep repeating for desired amount of Access Switches or:
		Port-channel
		CTRL + C

	Main()
		UplinkFast and Loopguard will be applied to all Access and Core devices automaticly
		
		(1) VLAN	
			Spanning Tree mode (TAB) will auto input
			VLAN ID
			VLAN Name
			VLAN Priority
			*Saved to dictionary
		VLAN	
			Spanning Tree mode (TAB) will auto input
			VLAN ID
			VLAN Name
			VLAN Priority
			*Saved to dictionary
		Keep repeating for desired amount of VLANs or:
		VLAN
		CTRL + C

	Redundancy()
	Display VLAN and Priority configured in the VLAN configurations. This is a reminder so the proper VLAN SVIs can be assigned.
	
		SVI
			Description (optional)
			IP Address and Mask (split with space, both applied on same line) The IP and MASK are also verified for validity.
			MAC Refresh
			HSRP Authentication
			Group Number
			Standby IP - The IP address are also verified for validity.
			Preempt Timer
		SVI
			Description (optional)
			IP Address and Mask (split with space, both applied on same line) The IP and MASK are also verified for validity.
			MAC Refresh
			HSRP Authentication
			Group Number
			Standby IP - The IP address are also verified for validity.
			Preempt Timer
		Keep repeating for desired amount of VLANs or:
		SVI
		CTRL + C
	
	*NOTE
		Once VLANs and HSRP gateways are created, the secondary core switch and access switches configurations are created automaticlly.
		In short, the access switch bridge priority are set to 61440 which is the highest possible. The HSRP prioritys are based of the
		VLAN priorities configured in the VLAN configuration section:
	Main()
		Display Topology()
	
		(4) Send Topology
			Send configrations to devices based of 2 dictionaries, Core_dict and Access_dict. As configurations are applied a status
			will be provided. Each Core device has 3 config pushes, HSRP, VLAN, Interfaces. Access devices have 2 config pushes, VLAN
			and Interface:

			Once Complete the program will pause for 35 seconds. This allows the local device NETCONF DBs to sync so configuration
			save doesnt fail. 
	Main()
		(6) View Configurations
			Verify the configuration has bee applied correctly. If the local NETCONF DB hasnt synced, some sections can be blank.
	Main()
		(3) Topology Build
			Here you can rebuild the topology without exiting the program
		
	
	
	
